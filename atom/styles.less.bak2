/*
 * Your Stylesheet
 *
 * This stylesheet is loaded when Atom starts up and is reloaded automatically
 * when it is changed.
 *
 * If you are unfamiliar with LESS, you can read more about it here:
 * http://www.lesscss.org
 */

.tree-view {

}

.editor {
  // font-family: 'Hack', monospace;
  // font-size: 14px;
  // line-height: 1.6;

  // font-family: 'menlo', monospace;
  // font-size: 14px;
  // line-height: 1.6;

  // font-family: 'Ubuntu Mono', monospace;
  // font-size: 14px;

  // font-family: 'Source Code Pro', monospace;
  // font-size: 13px;
  // line-height: 1.5;

  font-family: 'Monaco', monospace;
  font-size: 14.6px;
  line-height: 1.7;

  // font-family: 'Roboto Mono', monospace;
  // font-size: 13.5px;
  // line-height: 1.7;
}

atom-text-editor {
  // background-color: rgb(246, 249, 252);
}

atom-text-editor::shadow {
  .gutter {
    border-right-width: 0px;
  }

  .indent-guide {
    opacity: 0.8;
  }

  // Disable bold fonts
  .punctuation, .entity, .keyword, .constant {
    font-weight: normal;
  }
  // Disable bold fonts in autocomplete plus
  autocomplete-suggestion-list .character-match {
    font-weight: normal;
  }

  //
  // Colors
  //

  // @violet: #795da3;
  // @carmine: #a71d5d;
  @lightblue: #0086b3;
  // @blue: #183691;
  // @black: #333333;

  @violet: #DD4A68; // Functions
  // @carmine: #07a; // Keywords
  @carmine: #169CEE; // Keywords
  @blue: #66637A; // Strings and..
  // @black: #66637A; // ..other code
  @black: #303030; // ..other code
  @slategray: rgb(112, 128, 144); // Comments
  // @gray: #999; // Punctuation
  @brown: #a67f59; // Punctuation

  .punctuation {
    // color: @gray;
    color: @brown;
  }

  .comment {
    color: @slategray !important;
    // opacity: 0.4;
    opacity: 0.6;
  }

  .entity {
    color: @violet;

    &.inherited-class, &.class {
      color: @violet;
    }
  }

  .support.class {
    // color: @lightblue;
    color: @carmine;
  }

  .constant {
    // color: @lightblue;
    color: @carmine;
  }

  .keyword {
    color: @carmine;
  }

  .operator {
    color: @brown;
  }

  .string {
    color: @blue;
  }

  .variable {
    color: @black;

    &.constant {
      // color: @lightblue;
      color: @carmine;
    }
  }

  .source {
    color: @black;
  }
}
